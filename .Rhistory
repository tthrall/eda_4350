g_soi <- astsa::tsplot(soi, ylab="", main="Southern Oscillation Index", col=4)
text(1970, .91, "COOL", col=5, font=4)
text(1970, -.91, "WARM", col=6, font=4)
g_rec <- astsa::tsplot(rec, ylab="", main="Recruitment", col=4)
g_hare_lynx <- tsplot(
cbind(Hare, Lynx),
col=c(2,4),
type="o",
pch=c(0,2),
ylab="Number",
spaghetti=TRUE,
addLegend=TRUE)
mtext("(\u00D7 1000)", side=2, adj=1, line=1.5, cex=.8)
par(mfrow=c(3,1))
x = ts(fmri1[,4:9], start=0, freq=32) # data
u = ts(
rep(c(rep(.6,16), rep(-.6,16)), 4),
start=0,
freq=32)
# stimulus signal
names = c("Cortex","Thalamus","Cerebellum")
g_fmri <- list()
for (i in 1:3){
j = 2*i-1
g_fmri [[i]] <- astsa::tsplot(
x[,j:(j+1)],
ylab="BOLD", xlab="",
main=names[i], col=5:6,
ylim=c(-.6,.6), lwd=2, xaxt="n", spaghetti=TRUE
)
axis(seq(0,256,64), side=1, at=0:4)
lines(u, type="s", col=gray(.3))
}
mtext("seconds", side=1, line=1.75, cex=.9)
g_eqexp <- astsa::tsplot(
cbind(EQ5,EXP6),
ylab=c("Earthquake", "Explosion"),
col=4
)
faithful_tbl <- datasets::faithful |>
tibble::as_tibble() |>
dplyr::rename(
duration = eruptions,
delay    = waiting
) |>
dplyr::select(delay, duration)
g_faithful_tbl <- faithful_tbl |>
ggplot(mapping = aes(
x = delay, y = duration
)) +
geom_point() +
labs(title = "Old Faithful eruptions: delay and duration")
g_faithful_tbl
## Glossary of Math Symbols
symbol_tbl <- get_symbol_tbl()
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
symbol_tbl |> readr::write_rds(here::here(
"data", "retain", "symbol_tbl.rds"
))
# TSV format
symbol_tbl |> readr::write_tsv(here::here(
"data", "retain", "symbol_tbl.txt"
))
}
# symbol_tbl |>
#   dplyr::select(symbol, dscr) |>
#   knitr::kable(
#     format = "html",
# 	escape = FALSE,
# 	caption = "Glossary of Mathematical Symbols (s)",
# 	col.names = c("s", "description")
#   )
books_tbl <- get_books_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
books_tbl |> readr::write_rds(here::here(
"data", "retain", "books_tbl.rds"
))
# TSV format
books_tbl |> readr::write_tsv(here::here(
"data", "retain", "books_tbl.txt"
))
}
books_tbl |>
list_links(a_idx = 3L) |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
articles_tbl <- get_articles_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
articles_tbl |> readr::write_rds(here::here(
"data", "retain", "articles_tbl.rds"
))
# TSV format
articles_tbl |> readr::write_tsv(here::here(
"data", "retain", "articles_tbl.txt"
))
}
articles_tbl |>
list_links() |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
knitr::opts_chunk$set(
echo    = FALSE,
error   = FALSE,
message = FALSE,
warning = FALSE
)
library(assertthat)
library(astsa)
library(here)
library(knitr)
library(latex2exp)
library(tidyverse)
library(tinytex)
library(xts)
# library(ugrid)
# gen_ds_tbl
# compile a tibble that identifies data sets
source(here("code", "gen_ds_tbl.R"))
# get_ref_materials
# encapsulate reference materials as separate modules
source(here("code", "get_ref_materials.R"))
# grid-points in (-m pi, m pi), m = m_periods
# x_vec <- u_vec * (m_periods * pi)
astsa_data_set_tbl <- get_all_ds_per_pkg(pkgs = "astsa")
# write to file only as needed
save_to_file <- FALSE
if (save_to_file) {
# TSV
astsa_data_set_tbl |>
readr::write_tsv(here(
"data", "retain", "astsa_data_set_tbl.txt"
))
# RDS
astsa_data_set_tbl |>
readr::write_rds(here(
"data", "rds", "astsa_data_set_tbl.rds"
))
}
par(mfrow=2:1)
g_jj <- astsa::tsplot(
jj,
col=4,
ylab="USD",
type="o",
main="Johnson & Johnson Quarterly Earnings per Share")
g_jj_log <- astsa::tsplot(
jj, col=4, ylab="USD", type="o", log="y")
# names of relevant data sets from package astsa::
climate_ds_names <- c(
"cardox", "ENSO", "gtemp.month", "gtemp_both",
"gtemp_land", "gtemp_ocean", "soi"
)
climate_ds_tbl <- select_ds_per_pkg(
pkgs = "astsa",
datasets = climate_ds_names)
climate_ds_tbl |> knitr::kable(
caption = "Climate: selected data sets"
)
g_temp_lo <- astsa::tsplot(
cbind(gtemp_land, gtemp_ocean),
spaghetti=TRUE,
col=astsa.col(c(4,2),.7),
pch=c(20,18),
type="o",
ylab="\u00B0C",
main="Global Surface Temperature Anomalies",
addLegend=TRUE,
location="topleft",
legend=c("Land Surface","Sea Surface")
)
g_speech <- astsa::tsplot(speech, col=4)
arrows(658, 3850, 766, 3850,
code=3, angle=90, length=.05, col=6)
text(712, 4100, "pitch period", cex=.75)
djia_return <-
astsa::djia $Close |> log() |> diff()
par(mfrow=2:1)
plot(djia$Close, col=4, main="DJIA Close")
plot(djia_return, col=4, main="DJIA Returns")
par(mfrow=2:1)
g_soi <- astsa::tsplot(soi, ylab="", main="Southern Oscillation Index", col=4)
text(1970, .91, "COOL", col=5, font=4)
text(1970, -.91, "WARM", col=6, font=4)
g_rec <- astsa::tsplot(rec, ylab="", main="Recruitment", col=4)
g_hare_lynx <- tsplot(
cbind(Hare, Lynx),
col=c(2,4),
type="o",
pch=c(0,2),
ylab="Number",
spaghetti=TRUE,
addLegend=TRUE)
mtext("(\u00D7 1000)", side=2, adj=1, line=1.5, cex=.8)
par(mfrow=c(3,1))
x = ts(fmri1[,4:9], start=0, freq=32) # data
u = ts(
rep(c(rep(.6,16), rep(-.6,16)), 4),
start=0,
freq=32)
# stimulus signal
names = c("Cortex","Thalamus","Cerebellum")
g_fmri <- list()
for (i in 1:3){
j = 2*i-1
g_fmri [[i]] <- astsa::tsplot(
x[,j:(j+1)],
ylab="BOLD", xlab="",
main=names[i], col=5:6,
ylim=c(-.6,.6), lwd=2, xaxt="n", spaghetti=TRUE
)
axis(seq(0,256,64), side=1, at=0:4)
lines(u, type="s", col=gray(.3))
}
mtext("seconds", side=1, line=1.75, cex=.9)
g_eqexp <- astsa::tsplot(
cbind(EQ5,EXP6),
ylab=c("Earthquake", "Explosion"),
col=4
)
faithful_tbl <- datasets::faithful |>
tibble::as_tibble() |>
dplyr::rename(
duration = eruptions,
delay    = waiting
) |>
dplyr::select(delay, duration)
g_faithful_tbl <- faithful_tbl |>
ggplot(mapping = aes(
x = delay, y = duration
)) +
geom_point() +
labs(title = "Old Faithful eruptions: delay and duration")
g_faithful_tbl
## Glossary of Math Symbols
symbol_tbl <- get_symbol_tbl()
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
symbol_tbl |> readr::write_rds(here::here(
"data", "retain", "symbol_tbl.rds"
))
# TSV format
symbol_tbl |> readr::write_tsv(here::here(
"data", "retain", "symbol_tbl.txt"
))
}
# symbol_tbl |>
#   dplyr::select(symbol, dscr) |>
#   knitr::kable(
#     format = "html",
# 	escape = FALSE,
# 	caption = "Glossary of Mathematical Symbols (s)",
# 	col.names = c("s", "description")
#   )
books_tbl <- get_books_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
books_tbl |> readr::write_rds(here::here(
"data", "retain", "books_tbl.rds"
))
# TSV format
books_tbl |> readr::write_tsv(here::here(
"data", "retain", "books_tbl.txt"
))
}
books_tbl |>
list_links(a_idx = 3L) |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
articles_tbl <- get_articles_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
articles_tbl |> readr::write_rds(here::here(
"data", "retain", "articles_tbl.rds"
))
# TSV format
articles_tbl |> readr::write_tsv(here::here(
"data", "retain", "articles_tbl.txt"
))
}
articles_tbl |>
list_links() |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
knitr::opts_chunk$set(
echo    = FALSE,
error   = FALSE,
message = FALSE,
warning = FALSE
)
library(assertthat)
library(astsa)
library(here)
library(knitr)
library(latex2exp)
library(tidyverse)
library(tinytex)
library(xts)
# library(ugrid)
# gen_ds_tbl
# compile a tibble that identifies data sets
source(here("code", "gen_ds_tbl.R"))
# get_ref_materials
# encapsulate reference materials as separate modules
source(here("code", "get_ref_materials.R"))
# grid-points in (-m pi, m pi), m = m_periods
# x_vec <- u_vec * (m_periods * pi)
astsa_data_set_tbl <- get_all_ds_per_pkg(pkgs = "astsa")
# write to file only as needed
save_to_file <- FALSE
if (save_to_file) {
# TSV
astsa_data_set_tbl |>
readr::write_tsv(here(
"data", "retain", "astsa_data_set_tbl.txt"
))
# RDS
astsa_data_set_tbl |>
readr::write_rds(here(
"data", "rds", "astsa_data_set_tbl.rds"
))
}
par(mfrow=2:1)
g_jj <- astsa::tsplot(
jj,
col=4,
ylab="USD",
type="o",
main="Johnson & Johnson Quarterly Earnings per Share")
g_jj_log <- astsa::tsplot(
jj, col=4, ylab="USD", type="o", log="y")
# names of relevant data sets from package astsa::
climate_ds_names <- c(
"cardox", "ENSO", "gtemp.month", "gtemp_both",
"gtemp_land", "gtemp_ocean", "soi"
)
climate_ds_tbl <- select_ds_per_pkg(
pkgs = "astsa",
datasets = climate_ds_names)
climate_ds_tbl |> knitr::kable(
caption = "Climate: selected data sets"
)
g_temp_lo <- astsa::tsplot(
cbind(gtemp_land, gtemp_ocean),
spaghetti=TRUE,
col=astsa.col(c(4,2),.7),
pch=c(20,18),
type="o",
ylab="\u00B0C",
main="Global Surface Temperature Anomalies",
addLegend=TRUE,
location="topleft",
legend=c("Land Surface","Sea Surface")
)
g_speech <- astsa::tsplot(speech, col=4)
arrows(658, 3850, 766, 3850,
code=3, angle=90, length=.05, col=6)
text(712, 4100, "pitch period", cex=.75)
# log-ratio of successive closing values
djia_return <-
astsa::djia $Close |> log() |> diff()
par(mfrow=2:1)
plot(djia$Close, col=4, main="DJIA Close")
plot(djia_return, col=4, main="DJIA Returns")
par(mfrow=2:1)
g_soi <- astsa::tsplot(soi, ylab="", main="Southern Oscillation Index", col=4)
text(1970, .91, "COOL", col=5, font=4)
text(1970, -.91, "WARM", col=6, font=4)
g_rec <- astsa::tsplot(rec, ylab="", main="Recruitment", col=4)
g_hare_lynx <- tsplot(
cbind(Hare, Lynx),
col=c(2,4),
type="o",
pch=c(0,2),
ylab="Number",
spaghetti=TRUE,
addLegend=TRUE)
mtext("(\u00D7 1000)", side=2, adj=1, line=1.5, cex=.8)
par(mfrow=c(3,1))
x = ts(fmri1[,4:9], start=0, freq=32) # data
u = ts(
rep(c(rep(.6,16), rep(-.6,16)), 4),
start=0,
freq=32)
# stimulus signal
names = c("Cortex","Thalamus","Cerebellum")
g_fmri <- list()
for (i in 1:3){
j = 2*i-1
g_fmri [[i]] <- astsa::tsplot(
x[,j:(j+1)],
ylab="BOLD", xlab="",
main=names[i], col=5:6,
ylim=c(-.6,.6), lwd=2, xaxt="n", spaghetti=TRUE
)
axis(seq(0,256,64), side=1, at=0:4)
lines(u, type="s", col=gray(.3))
}
mtext("seconds", side=1, line=1.75, cex=.9)
g_eqexp <- astsa::tsplot(
cbind(EQ5,EXP6),
ylab=c("Earthquake", "Explosion"),
col=4
)
faithful_tbl <- datasets::faithful |>
tibble::as_tibble() |>
dplyr::rename(
duration = eruptions,
delay    = waiting
) |>
dplyr::select(delay, duration)
g_faithful_tbl <- faithful_tbl |>
ggplot(mapping = aes(
x = delay, y = duration
)) +
geom_point() +
labs(title = "Old Faithful eruptions: delay and duration")
g_faithful_tbl
## Glossary of Math Symbols
symbol_tbl <- get_symbol_tbl()
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
symbol_tbl |> readr::write_rds(here::here(
"data", "retain", "symbol_tbl.rds"
))
# TSV format
symbol_tbl |> readr::write_tsv(here::here(
"data", "retain", "symbol_tbl.txt"
))
}
# symbol_tbl |>
#   dplyr::select(symbol, dscr) |>
#   knitr::kable(
#     format = "html",
# 	escape = FALSE,
# 	caption = "Glossary of Mathematical Symbols (s)",
# 	col.names = c("s", "description")
#   )
books_tbl <- get_books_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
books_tbl |> readr::write_rds(here::here(
"data", "retain", "books_tbl.rds"
))
# TSV format
books_tbl |> readr::write_tsv(here::here(
"data", "retain", "books_tbl.txt"
))
}
books_tbl |>
list_links(a_idx = 3L) |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
articles_tbl <- get_articles_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
articles_tbl |> readr::write_rds(here::here(
"data", "retain", "articles_tbl.rds"
))
# TSV format
articles_tbl |> readr::write_tsv(here::here(
"data", "retain", "articles_tbl.txt"
))
}
articles_tbl |>
list_links() |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
