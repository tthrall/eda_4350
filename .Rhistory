labs(title = "Old Faithful eruptions: delay and duration")
g_faithful_tbl
faithful_4 <- faithful_tbl |>
dplyr::mutate(
delay_low     = delay    < median(delay),
duration_low  = duration < median(duration)
)
faithful_4_smy <- faithful_4 |>
dplyr::summarise(
.by           = c(delay_low, duration_low),
count         = n(),
delay_mean    = mean(delay),
duration_mean = mean(duration),
delay_sd      = sd(delay),
duration_sd   = sd(duration),
dd_cor        = cor(delay, duration),
delay_var     = var(delay),
duration_var  = var(duration),
dd_cov        = cov(delay, duration)
)
faithful_4_smy |>
dplyr::select(delay_low, duration_low, count:dd_cor) |>
knitr::kable(
caption = "Summary statistics for initial groups of data points",
digits = 1
)
faithful_2 <- faithful_4 |>
dplyr::filter(delay_low == duration_low) |>
dplyr::mutate(
z = dplyr::if_else(delay_low, 1L, 2L)
) |>
dplyr::select(z, delay, duration)
initial_est <- faithful_4_smy |>
dplyr::filter(delay_low == duration_low) |>
dplyr::mutate(
z      = dplyr::if_else(delay_low, 1L, 2L),
ct_sum = sum(count),
p      = count/ct_sum
) |>
dplyr::select(
z, p, delay_mean:dd_cov
)
initial_est |>
dplyr::select(z, p, delay_mean:dd_cor) |>
knitr::kable(
caption = "Initial parameter estimates",
digits = 1
)
delay_median    <- faithful_tbl$ delay    |> median()
duration_median <- faithful_tbl$ duration |> median()
g_faithful_2 <- faithful_2 |>
dplyr::mutate(z = forcats::as_factor(z)) |>
dplyr::group_by(z) |>
ggplot(mapping = aes(
x = delay, y = duration, colour = z
)) +
geom_point(
mapping = aes(colour = z, shape = z),
show.legend = TRUE
) +
geom_vline(xintercept = delay_median) +
geom_hline(yintercept = duration_median) +
stat_ellipse(level = 0.5) +
labs(
title = "Old Faithful eruptions: initial normal estimates",
subtitle = "50% normal ellipses for quadrants 1 and 3"
)
g_faithful_2
f_mu <- c(initial_est$delay_mean, initial_est$duration_mean) |>
matrix(nrow = 2, ncol = 2)
colnames(f_mu) <- c("delay", "duration")
f_sigma <- list()
f_sigma[[1]] <- c(
initial_est$ delay_var    [[1]],
initial_est$ dd_cov       [[1]],
initial_est$ dd_cov       [[1]],
initial_est$ duration_var [[1]]
) |>
matrix(nrow = 2, ncol = 2)
colnames(f_sigma [[1]]) <- c("delay", "duration")
rownames(f_sigma [[1]]) <- c("delay", "duration")
f_sigma[[2]] <- c(
initial_est$ delay_var    [[2]],
initial_est$ dd_cov       [[2]],
initial_est$ dd_cov       [[2]],
initial_est$ duration_var [[2]]
) |>
matrix(nrow = 2, ncol = 2)
colnames(f_sigma [[2]]) <- c("delay", "duration")
rownames(f_sigma [[2]]) <- c("delay", "duration")
f_tag_tbl <- faithful_tbl |>
dplyr::rowwise() |>
dplyr::mutate(
md_1 = mahalanobis(
x      = c(delay, duration),
center = f_mu    [1, ],
cov    = f_sigma [[1]]
),
md_2 = mahalanobis(
x      = c(delay, duration),
center = f_mu    [2, ],
cov    = f_sigma [[2]]
),
z = dplyr::if_else(md_1 < md_2, 1L, 2L)
)
f_tag_tbl <- f_tag_tbl |>
dplyr::ungroup()
g_f_tag_tbl <- f_tag_tbl |>
dplyr::mutate(z = forcats::as_factor(z)) |>
dplyr::group_by(z) |>
ggplot(mapping = aes(
x = delay, y = duration, group = z
)) +
geom_point(
aes(
colour = z,
shape  = z,
),
show.legend = TRUE
) +
geom_vline(xintercept = delay_median) +
geom_hline(yintercept = duration_median) +
labs(
title = "Old Faithful: inital clustering of all points",
subtitle = "with original quadrants defined by medians"
)
g_f_tag_tbl
f_tag_smy <- f_tag_tbl |>
dplyr::ungroup() |>
dplyr::summarise(
.by = z,
count         = n(),
delay_mean    = mean(delay),
duration_mean = mean(duration),
delay_sd      = sd(delay),
duration_sd   = sd(duration),
dd_cor        = cor(delay, duration),
delay_var     = var(delay),
duration_var  = var(duration),
dd_cov        = cov(delay, duration)
)
f_tag_smy |>
dplyr::select(z:dd_cor) |>
knitr::kable(
caption = "Summary statistics for initial clusters of data points",
digits = 1
)
initial_est <- faithful_4_smy |>
dplyr::filter(delay_low == duration_low) |>
dplyr::mutate(
z      = dplyr::if_else(delay_low, 1L, 2L),
ct_sum = sum(count),
p      = count/ct_sum
) |>
dplyr::select(
z, count, p, delay_mean:dd_cov
)
initial_est |>
dplyr::select(z, count, delay_mean:dd_cor) |>
knitr::kable(
caption = "Initial parameter estimates",
digits = 1
)
install.packages("mixtools")
library(mixtools)
em_tst <- faithful_tbl |> mvnormalmixEM(lambda = c(0.5, 0.5), mu = list(c(57, 2.3), c(81, 4.4)), sigma = list(c(71, 3.9, 3.9, 0.4), c(27.8, 0.25, 0.25, 0.12)), verb = TRUE)
matrix(c(71, 3.9, 3.9, 0.4))
matrix(c(71, 3.9, 3.9, 0.4), 2, 2)
em_tst <- faithful_tbl |> mvnormalmixEM(lambda = c(0.5, 0.5), mu = list(c(57, 2.3), c(81, 4.4)), sigma = list(matrix(c(71, 3.9, 3.9, 0.4), 2, 2), matrix(c(27.8, 0.25, 0.25, 0.12), 2, 2)), verb = TRUE)
em_out <- faithful_tbl |>
mvnormalmixEM(
lambda = c(0.5, 0.5),
mu = list(
# delay, duration
c(56.6, 2.25), # (lower, lower)
c(82.4, 4.47)  # (upper, upper)
),
sigma = list(
# (lower, lower)
matrix(
nrow = 2, ncol = 2,
data = c(
59.7,  3.27,
3.27,  0.35
)),
# (upper, upper)
matrix(
nrow = 2, ncol = 2,
data = c(
21.5,  0.19,
0.19,  0.08
))
),
verb = TRUE
)
em_out$posterior |> as_tibble()
faithful_tbl |>
dplyr::bind_cols(em_out$posterior) |>
dplyr::mutate(
z = dplyr::if_else(comp.1 > comp.2, 1L, 2L)
)
f_em <- faithful_tbl |>
dplyr::bind_cols(em_out$posterior) |>
dplyr::mutate(
z = dplyr::if_else(comp.1 > comp.2, 1L, 2L)
)
f_em_smy <- f_em |>
dplyr::summarise(
.by           = z,
count         = n(),
delay_mean    = mean(delay),
duration_mean = mean(duration),
delay_sd      = sd(delay),
duration_sd   = sd(duration),
dd_cor        = cor(delay, duration),
delay_var     = var(delay),
duration_var  = var(duration),
dd_cov        = cov(delay, duration)
)
f_em_smy |>
dplyr::select(z, count:dd_cor) |>
knitr::kable(
caption = "Summary statistics for final groups of data points",
digits = 1
)
f_em_smy <- f_em |>
dplyr::summarise(
.by           = z,
count         = n(),
delay_mean    = mean(delay),
duration_mean = mean(duration),
delay_sd      = sd(delay),
duration_sd   = sd(duration),
dd_cor        = cor(delay, duration),
delay_var     = var(delay),
duration_var  = var(duration),
dd_cov        = cov(delay, duration)
) |>
arrange(z)
f_em_smy |>
dplyr::select(z, count:dd_cor) |>
knitr::kable(
caption = "Summary statistics for final groups of data points",
digits = 1
)
g_f_em <- f_em |>
dplyr::mutate(z = forcats::as_factor(z)) |>
dplyr::group_by(z) |>
ggplot(mapping = aes(
x = delay, y = duration, colour = z
)) +
geom_point(
mapping = aes(colour = z, shape = z),
show.legend = TRUE
) +
geom_vline(xintercept = delay_median) +
geom_hline(yintercept = duration_median) +
stat_ellipse(level = 0.5) +
labs(
title = "Old Faithful eruptions: final normal estimates",
subtitle = "50% normal ellipses for quadrants 1 and 3"
)
g_f_em
g_f_em <- f_em |>
dplyr::mutate(z = forcats::as_factor(z)) |>
dplyr::group_by(z) |>
ggplot(mapping = aes(
x = delay, y = duration, colour = z
)) +
geom_point(
mapping = aes(colour = z, shape = z),
show.legend = TRUE
) +
geom_vline(xintercept = delay_median) +
geom_hline(yintercept = duration_median) +
stat_ellipse(level = 0.5) +
labs(
title = "Old Faithful eruptions: final normal estimates",
subtitle = "50% normal ellipses for clusters 1 and 2"
)
g_f_em
(mu_final <- ((97 * 54.5) + (175 * 80))/272)
(mu_prior <- ((115 * 57.1) + (157 * 81))/272)
library(rmarkdown)
here("markdown", "s_6a_LDA", "s_6a_EM.qmd") |> render(output_format = "word_document")
233 - (22+ 87)
knitr::opts_chunk$set(
echo    = FALSE,
error   = FALSE,
message = FALSE,
warning = FALSE
)
library(assertthat)
library(astsa)
library(here)
library(knitr)
library(latex2exp)
library(tidyverse)
library(tinytex)
# library(ugrid)
# gen_ds_tbl
# compile a tibble that identifies data sets
source(here("code", "gen_ds_tbl.R"))
# get_ref_materials
# enscapsulate reference materials as separate modules
source(here("code", "get_ref_materials.R"))
# grid-points in (-m pi, m pi), m = m_periods
# x_vec <- u_vec * (m_periods * pi)
knitr::opts_chunk$set(
echo    = FALSE,
error   = FALSE,
message = FALSE,
warning = FALSE
)
library(assertthat)
library(astsa)
library(here)
library(knitr)
library(latex2exp)
library(tidyverse)
library(tinytex)
# library(ugrid)
# gen_ds_tbl
# compile a tibble that identifies data sets
source(here("code", "gen_ds_tbl.R"))
# get_ref_materials
# enscapsulate reference materials as separate modules
source(here("code", "get_ref_materials.R"))
astsa_data_set_lst <- data(pakcage = "astsa")
astsa_data_set_tbl <-
astsa_data_set_lst $results [, 3:4] |>
tibble::as_tibble()
# write to file only as needed
save_to_file <- FALSE
if (save_to_file) {
# TSV
astsa_data_set_tbl |>
readr::write_tsv(here(
"data", "retain", "astsa_data_set_tbl.txt"
))
# RDS
astsa_data_set_tbl |>
readr::write_rds(here(
"data", "retain", "astsa_data_set_tbl.rds"
))
}
astsa_data_set_lst <- data(pakcage = "astsa")
astsa_data_set_tbl <-
astsa_data_set_lst $results [, 3:4] |>
tibble::as_tibble()
# write to file only as needed
save_to_file <- FALSE
if (save_to_file) {
# TSV
astsa_data_set_tbl |>
readr::write_tsv(here(
"data", "retain", "astsa_data_set_tbl.txt"
))
# RDS
astsa_data_set_tbl |>
readr::write_rds(here(
"data", "retain", "astsa_data_set_tbl.rds"
))
}
astsa_data_set_lst <- data(package = "astsa")
astsa_data_set_tbl <-
astsa_data_set_lst $results [, 3:4] |>
tibble::as_tibble()
# write to file only as needed
save_to_file <- FALSE
if (save_to_file) {
# TSV
astsa_data_set_tbl |>
readr::write_tsv(here(
"data", "retain", "astsa_data_set_tbl.txt"
))
# RDS
astsa_data_set_tbl |>
readr::write_rds(here(
"data", "retain", "astsa_data_set_tbl.rds"
))
}
# names of relevant data sets from package astsa::
climate_ds_names <- c(
"ENSO", "gtemp.month", "gtemp_both",
"gtemp_land", "gtemp_ocean", "soi"
)
climate_ds_tbl <- gen_ds_tbl(
pkgs = "astsa",
datasets = climate_ds_names)
climate_ds_tbl |> knitr::kable(
caption = "Climate: selected data sets"
)
astsa_data_set_lst <- data(package = "astsa")
library(tidyverse)
source("~/GitHub/eda_4350/code/gen_ds_tbl.R")
get_all_ds_per_pkg(pkgs = "astsa")
select_ds_per_pkg(pkgs = "astsa", datasets = c("ENOS", "soi"))
select_ds_per_pkg(pkgs = "astsa", datasets = c("ENSO", "soi"))
source("~/GitHub/eda_4350/code/gen_ds_tbl.R")
select_ds_per_pkg(pkgs = "astsa", datasets = c("ENSO", "soi"))
knitr::opts_chunk$set(
echo    = FALSE,
error   = FALSE,
message = FALSE,
warning = FALSE
)
library(assertthat)
library(astsa)
library(here)
library(knitr)
library(latex2exp)
library(tidyverse)
library(tinytex)
# library(ugrid)
# gen_ds_tbl
# compile a tibble that identifies data sets
source(here("code", "gen_ds_tbl.R"))
# get_ref_materials
# enscapsulate reference materials as separate modules
source(here("code", "get_ref_materials.R"))
# grid-points in (-m pi, m pi), m = m_periods
# x_vec <- u_vec * (m_periods * pi)
astsa_data_set_tbl <- get_all_ds_per_pkg(pkgs = "astsa")
# write to file only as needed
save_to_file <- FALSE
if (save_to_file) {
# TSV
astsa_data_set_tbl |>
readr::write_tsv(here(
"data", "retain", "astsa_data_set_tbl.txt"
))
# RDS
astsa_data_set_tbl |>
readr::write_rds(here(
"data", "rds", "astsa_data_set_tbl.rds"
))
}
# names of relevant data sets from package astsa::
climate_ds_names <- c(
"ENSO", "gtemp.month", "gtemp_both",
"gtemp_land", "gtemp_ocean", "soi"
)
climate_ds_tbl <- select_ds_per_pkg(
pkgs = "astsa",
datasets = climate_ds_names)
climate_ds_tbl |> knitr::kable(
caption = "Climate: selected data sets"
)
symbol_tbl <- get_symbol_tbl()
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
symbol_tbl |> readr::write_rds(here::here(
"data", "retain", "symbol_tbl.rds"
))
# TSV format
symbol_tbl |> readr::write_tsv(here::here(
"data", "retain", "symbol_tbl.txt"
))
}
symbol_tbl |>
dplyr::select(symbol, dscr) |>
knitr::kable(
format = "html",
escape = FALSE,
caption = "Glossary of Mathematical Symbols (s)",
col.names = c("s", "description")
)
books_tbl <- get_books_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
books_tbl |> readr::write_rds(here::here(
"data", "retain", "books_tbl.rds"
))
# TSV format
books_tbl |> readr::write_tsv(here::here(
"data", "retain", "books_tbl.txt"
))
}
books_tbl |>
list_links(a_idx = 3L) |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
articles_tbl <- get_articles_tbl() |>
dplyr::arrange(title)
# save file only when updated
save_to_file <- FALSE
if (save_to_file) {
# RDS format
articles_tbl |> readr::write_rds(here::here(
"data", "retain", "articles_tbl.rds"
))
# TSV format
articles_tbl |> readr::write_tsv(here::here(
"data", "retain", "articles_tbl.txt"
))
}
articles_tbl |>
list_links() |>
knitr::kable(
format    = "html",
escape    = FALSE,
col.names = ""
)
